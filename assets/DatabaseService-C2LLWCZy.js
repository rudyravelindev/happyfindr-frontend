const a=o=>{let e=0;for(let t=0;t<o.length;t++){const s=o.charCodeAt(t);e=(e<<5)-e+s,e=e&e}return e.toString()};class i{constructor(){this.loadFromLocalStorage(),this.users.size===0&&(this.nextUserId=1,this.createUser({name:"Demo User",email:"demo@example.com",password:a("password123")}))}loadFromLocalStorage(){const e=localStorage.getItem("appDatabase");if(e){const t=JSON.parse(e);this.users=new Map(t.users),this.items=new Map(t.items),this.nextUserId=t.nextUserId,this.nextItemId=t.nextItemId}else this.users=new Map,this.items=new Map,this.nextUserId=1,this.nextItemId=1}saveToLocalStorage(){const e={users:Array.from(this.users.entries()),items:Array.from(this.items.entries()),nextUserId:this.nextUserId,nextItemId:this.nextItemId};localStorage.setItem("appDatabase",JSON.stringify(e))}createUser(e){const t=this.nextUserId.toString();this.nextUserId++;const s={id:t,...e,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return s.password&&(s.password=a(s.password)),this.users.set(t,s),this.saveToLocalStorage(),s}getUserById(e){const t=this.users.get(e);if(!t)throw new Error(`User with ID ${e} not found`);return t}getUserByEmail(e){for(const t of this.users.values())if(t.email===e)return t;return null}updateUser(e,t){const s=this.getUserById(e);t.password&&(t.password=a(t.password));const r={...s,...t,updatedAt:new Date().toISOString()};return this.users.set(e,r),this.saveToLocalStorage(),r}validateUser(e,t){const s=this.getUserByEmail(e);return s?s.password===a(t):!1}createItem(e){const t=this.nextItemId.toString();this.nextItemId++;const s={id:t,...e,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return this.items.set(t,s),this.saveToLocalStorage(),s}getItemById(e){const t=this.items.get(e);if(!t)throw new Error(`Item with ID ${e} not found`);return t}getUserItems(e){const t=[];for(const s of this.items.values())s.userId===e&&t.push(s);return t}updateItem(e,t){const r={...this.getItemById(e),...t,updatedAt:new Date().toISOString()};return this.items.set(e,r),this.saveToLocalStorage(),r}deleteItem(e){const t=this.items.delete(e);return this.saveToLocalStorage(),t}}const n=new i;export{n as default};
